{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-devgiangho/src/components/page-sidebar-content/index.tsx","webpack:///./node_modules/gatsby-theme-devgiangho/src/templates/page.tsx"],"names":["LatestPosts","styled","div","Theme","breakpoints","md","PageSidebarContent","posts","edges","map","node","post","index","title","frontmatter","featuredImage","childImageSharp","path","key","compact","meta","time","created","timePretty","createdPretty","tag","tags","length","PageContainer","Container","PageSidebar","aside","PageTemplate","pathContext","location","page","bigHeader","description","excerpt","backgroundColor","layout","primaryColor","dangerouslySetInnerHTML","__html","html"],"mappings":"+KAMMA,EAAcC,UAAOC,IAAV,uFAAGD,CAAH,gLAMME,IAAMC,YAAYC,IAmE1BC,EA1D+B,WAC5C,IA8BMC,EA9Bc,OA8BMA,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKA,QAEvD,OACE,oCACE,4CACA,kBAACV,EAAD,KACGO,EAAME,KAAI,SAACE,EAAMC,GAAP,OACT,kBAAC,IAAD,CACEC,MAAOF,EAAKG,YAAYD,MACxBE,cAAeJ,EAAKG,YAAYC,cAAcC,gBAC9CC,KAAMN,EAAKG,YAAYG,KACvBC,IAAKN,EACLO,SAAS,EACTC,KACE,CACEC,KAAMV,EAAKG,YAAYQ,QACvBC,WAAYZ,EAAKG,YAAYU,cAC7BC,IAAKd,EAAKG,YAAYY,KAAKC,OAAS,EAAIhB,EAAKG,YAAYY,KAAK,GAAK,c,SCpD7EE,EAAgB3B,kBAAO4B,KAAV,sEAAG5B,CAAH,kHAIIE,IAAMC,YAAYC,IASnCyB,EAAc7B,UAAO8B,MAAV,oEAAG9B,CAAH,4DAGME,IAAMC,YAAYC,IA0B1B2B,UArB4C,SAAC,GAA4B,IAA3BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAClEC,EAAOF,EAAYE,KAEzB,OACE,kBAAC,IAAD,CAAQC,WAAW,GACjB,kBAAC,IAAD,CACEvB,MAAOsB,EAAKrB,YAAYD,MACxBwB,YAAaF,EAAKrB,YAAYwB,QAC9BJ,SAAUA,IAEZ,kBAAC,IAAD,CAAWrB,MAAOsB,EAAKrB,YAAYD,MAAO0B,gBAAiBpC,IAAMqC,OAAOC,eACxE,kBAACb,EAAD,KACE,6BAASc,wBAAyB,CAACC,OAAQR,EAAKS,QAChD,kBAACd,EAAD,KACE,kBAAC,EAAD,W","file":"component---node-modules-gatsby-theme-devgiangho-src-templates-page-tsx-595bbb6179556159c76a.js","sourcesContent":["import React, {FunctionComponent} from \"react\";\r\nimport {graphql, useStaticQuery} from \"gatsby\";\r\nimport {Card} from \"../card\";\r\nimport styled from \"styled-components\";\r\nimport Theme from \"../../styles/theme\";\r\n\r\nconst LatestPosts = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 30px;\r\n  width: 310px;\r\n\r\n  @media (max-width: ${Theme.breakpoints.md}) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst PageSidebarContent: FunctionComponent = () => {\r\n  const latestPosts = useStaticQuery(graphql`\r\n    query {\r\n      posts: allMarkdownRemark(\r\n        filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\\\\\.md$/\" } }\r\n        sort: { fields: frontmatter___created, order: DESC }\r\n        limit: 3\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              title\r\n              path\r\n              tags\r\n              created\r\n              createdPretty: created(formatString: \"DD MMMM, YYYY\")\r\n              excerpt\r\n              featuredImage {\r\n                childImageSharp {\r\n                  fixed(width: 315, height: 100) {\r\n                    ...GatsbyImageSharpFixed\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const posts = latestPosts.posts.edges.map(node => node.node);\r\n\r\n  return (\r\n    <>\r\n      <h3>Latest posts</h3>\r\n      <LatestPosts>\r\n        {posts.map((post, index) => (\r\n          <Card\r\n            title={post.frontmatter.title}\r\n            featuredImage={post.frontmatter.featuredImage.childImageSharp}\r\n            path={post.frontmatter.path}\r\n            key={index}\r\n            compact={true}\r\n            meta={\r\n              {\r\n                time: post.frontmatter.created,\r\n                timePretty: post.frontmatter.createdPretty,\r\n                tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\r\n              }\r\n            }\r\n          />\r\n        ))}\r\n      </LatestPosts>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageSidebarContent;\r\n","import React, {FunctionComponent} from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport Subheader from \"../components/subheader\";\r\nimport {Page} from \"../utils/models\";\r\nimport Theme from \"../styles/theme\";\r\nimport {Container} from \"../components/common\";\r\nimport styled from \"styled-components\";\r\nimport PageSidebarContent from \"../components/page-sidebar-content\";\r\nimport SEO from \"../components/seo\";\r\n\r\ninterface PageTemplateProps {\r\n  pathContext: {\r\n    page: Page;\r\n  };\r\n  location: Location;\r\n}\r\n\r\nconst PageContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: ${Theme.breakpoints.md}) {\r\n    display: block;\r\n  }\r\n\r\n  p:first-child {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst PageSidebar = styled.aside`\r\n  margin-left: 50px;\r\n\r\n  @media (max-width: ${Theme.breakpoints.md}) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst PageTemplate: FunctionComponent<PageTemplateProps> = ({pathContext, location}) => {\r\n  const page = pathContext.page;\r\n\r\n  return (\r\n    <Layout bigHeader={false}>\r\n      <SEO\r\n        title={page.frontmatter.title}\r\n        description={page.frontmatter.excerpt}\r\n        location={location}\r\n      />\r\n      <Subheader title={page.frontmatter.title} backgroundColor={Theme.layout.primaryColor}/>\r\n      <PageContainer>\r\n        <section dangerouslySetInnerHTML={{__html: page.html}}/>\r\n        <PageSidebar>\r\n          <PageSidebarContent />\r\n        </PageSidebar>\r\n      </PageContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n"],"sourceRoot":""}