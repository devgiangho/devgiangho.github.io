{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-devgiangho/src/templates/tag.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/gatsby-theme-devgiangho/src/components/card/style.tsx","webpack:///./node_modules/gatsby-theme-devgiangho/src/components/card/index.tsx","webpack:///./node_modules/gatsby-theme-devgiangho/src/components/subheader/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.small.js","webpack:///./node_modules/gatsby-theme-devgiangho/src/components/post-grid/index.tsx"],"names":["TagTemplate","_ref","data","location","tag","posts","edges","map","node","length","name","frontmatter","tags","color","Theme","layout","primaryColor","icon","featured","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","bigHeader","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","type","_components_subheader__WEBPACK_IMPORTED_MODULE_3__","subtitle","backgroundColor","_components_post_grid__WEBPACK_IMPORTED_MODULE_6__","query","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","StyledCard","styled","Link","withConfig","displayName","componentId","StyledArticle","article","breakpoints","sm","FeaturedImage","Img","props","halfImage","CardContent","section","compact","CardMeta","CardTitle","h2","Card","meta","path","featuredImage","content","_ref$halfImage","_ref$compact","style","children","react_default","to","fixed","sizes","Fragment","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","StyledSubheader","div","textColor","SubheaderTitle","h1","SubheaderSubtitle","small","Subheader","_common__WEBPACK_IMPORTED_MODULE_3__","createHTML","this","_common__WEBPACK_IMPORTED_MODULE_1__","_card__WEBPACK_IMPORTED_MODULE_2__","PostGrid","post","index","childImageSharp","excerpt","key","created","createdPretty"],"mappings":"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","file":"component---node-modules-gatsby-theme-devgiangho-src-templates-tag-tsx-2df4f7734a39ac93930d.js","sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport {graphql} from \"gatsby\";\nimport {Post, Tag} from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport Theme from \"../styles/theme\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface TagTemplateProps {\n  data: {\n    tag: Tag;\n    posts: {\n      edges: Array<{ node: Post }>;\n    }\n  };\n  location: Location;\n}\n\nconst TagTemplate: FunctionComponent<TagTemplateProps> = ({data, location}) => {\n  let tag     = data.tag;\n  const posts = data.posts.edges.map(node => node.node);\n\n  if (! tag && posts.length > 0) {\n    tag = {\n      name: posts[0].frontmatter.tags[0],\n      color: Theme.layout.primaryColor,\n      icon: null,\n      featured: false,\n    };\n  }\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO\n        title={tag.name}\n        location={location}\n        type={`Series`}\n      />\n      <Subheader title={tag.name} subtitle={`${posts.length} posts`} backgroundColor={tag.color}/>\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const query = graphql`\n  query($tag: String!) {\n    tag: tags(name: { eq: $tag }) {\n      name\n      color\n    }\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {regex: \"/(posts)/.*\\\\\\\\.md$/\"},\n        frontmatter: {tags: {eq: $tag}}\n      },\n      sort: {fields: frontmatter___created, order: DESC}\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            tags\n            excerpt\n            created\n            createdPretty: created(formatString: \"DD MMMM, YYYY\")\n            featuredImage {\n              childImageSharp {\n                sizes(maxWidth: 800, quality: 100) {\n                  base64\n                  aspectRatio\n                  src\n                  srcSet\n                  sizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, {CSSProperties, FunctionComponent, ReactNode} from \"react\";\nimport {CardContent, CardMeta, CardTitle, FeaturedImage, StyledArticle, StyledCard} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n                                                     title,\n                                                     meta,\n                                                     path,\n                                                     featuredImage,\n                                                     content,\n                                                     halfImage = false,\n                                                     compact = false,\n                                                     style,\n                                                     children,\n                                                   }) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {(featuredImage && featuredImage.fixed) &&\n      <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage}/>\n      }\n      {(featuredImage && featuredImage.sizes) &&\n      <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage}/>\n      }\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta &&\n          <CardMeta>\n            {meta.tag && <>{meta.tag}</>}\n            {meta.time &&\n            <time dateTime={meta.time}>{meta.timePretty}</time>\n            }\n          </CardMeta>\n          }\n          {title &&\n          <CardTitle>{title}</CardTitle>\n          }\n        </header>\n        {content &&\n        <p dangerouslySetInnerHTML={{__html: content}}/>\n        }\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n"],"sourceRoot":""}