{"version":3,"file":"component---src-pages-archive-tsx-4dde0c472af6b2f3fecc.js","mappings":"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","sources":["webpack://devgiangho/./src/components/card/style.tsx","webpack://devgiangho/./src/components/card/index.tsx","webpack://devgiangho/./src/components/post-grid/index.tsx","webpack://devgiangho/./src/components/subheader/index.tsx","webpack://devgiangho/./src/pages/archive.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport {Link} from \"gatsby\";\r\nimport Theme from \"../../styles/theme\";\r\nimport Img from \"gatsby-image\";\r\nimport {CardProps} from \"./index\";\r\n\r\nexport const StyledCard = styled(Link)`\r\n  display: block;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\r\n  transition: .5s all;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    transform: translate3d(0, -5px, 0);\r\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\r\n  }\r\n`;\r\n\r\nexport const StyledArticle = styled.article`\r\n  display: inline-block;\r\n  width: 100%;\r\n\r\n  @media (max-width: ${Theme.breakpoints.sm}) {\r\n    grid-area: unset !important;\r\n  }\r\n`;\r\n\r\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\r\n  background-position: center;\r\n  background-size: cover;\r\n  max-width: 100%;\r\n  border-top-left-radius: 3px;\r\n\r\n  ${props => props.halfImage ? `\r\n    width: 50%;\r\n    float: left;\r\n    margin-right: 30px;\r\n    height: 320px;\r\n    border-bottom-left-radius: 3px;\r\n\r\n    @media (max-width: ${Theme.breakpoints.sm}) {\r\n      width: 100%;\r\n      float: none;\r\n      height: 190px;\r\n    }\r\n  ` : `\r\n    height: 190px;\r\n    max-height: 190px;\r\n    width: 100%;\r\n    border-top-right-radius: 3px;\r\n  `};\r\n`;\r\n\r\nexport const CardContent = styled.section<{ compact: boolean }>`\r\n  padding: ${props => props.compact ? '10px' : '40px'};\r\n\r\n  p {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nexport const CardMeta = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  font-size: .8em;\r\n  opacity: .8;\r\n  line-height: 1em;\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import React, { CSSProperties, FunctionComponent, ReactNode } from \"react\";\r\nimport {\r\n  CardContent,\r\n  CardMeta,\r\n  CardTitle,\r\n  FeaturedImage,\r\n  StyledArticle,\r\n  StyledCard,\r\n} from \"./style\";\r\n\r\nexport interface CardProps {\r\n  title?: string;\r\n  path: string;\r\n  featuredImage?: any;\r\n  content?: string;\r\n  meta?: {\r\n    time: string;\r\n    timePretty: string;\r\n    tag: string | null;\r\n  };\r\n  halfImage?: boolean;\r\n  compact?: boolean;\r\n  style?: CSSProperties;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const Card: FunctionComponent<CardProps> = ({\r\n  title,\r\n  meta,\r\n  path,\r\n  featuredImage,\r\n  content,\r\n  halfImage = false,\r\n  compact = false,\r\n  style,\r\n  children,\r\n}) => (\r\n  <StyledArticle style={style}>\r\n    <StyledCard to={path}>\r\n      {/* TODO: Oh boy... */}\r\n      {featuredImage && featuredImage.fixed && (\r\n        <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage} />\r\n      )}\r\n      {featuredImage && featuredImage.fluid && (\r\n        <FeaturedImage fluid={featuredImage.fluid} halfImage={halfImage} />\r\n      )}\r\n      <CardContent compact={compact}>\r\n        {children}\r\n        <header>\r\n          {meta && (\r\n            <CardMeta>\r\n              {meta.tag && <>{meta.tag}</>}\r\n              {meta.time && <time dateTime={meta.time}>{meta.timePretty}</time>}\r\n            </CardMeta>\r\n          )}\r\n          {title && <CardTitle>{title}</CardTitle>}\r\n        </header>\r\n        {content && <p dangerouslySetInnerHTML={{ __html: content }} />}\r\n      </CardContent>\r\n    </StyledCard>\r\n  </StyledArticle>\r\n);\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {Post} from \"../../utils/models\";\r\nimport {Grid} from \"../common\";\r\nimport {Card} from \"../card\";\r\n\r\ninterface PostGridProps {\r\n  posts: Post[];\r\n}\r\n\r\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\r\n  <Grid>\r\n    {posts.map((post, index) => (\r\n      <Card\r\n        title={post.frontmatter.title}\r\n        path={post.frontmatter.path}\r\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\r\n        content={post.frontmatter.excerpt}\r\n        key={index}\r\n        meta={\r\n          {\r\n            time: post.frontmatter.created,\r\n            timePretty: post.frontmatter.createdPretty,\r\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\r\n          }\r\n        }\r\n      />\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nexport default PostGrid;\r\n","import React, {FunctionComponent} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"../common\";\r\n\r\ninterface SubheaderProps {\r\n  title: string;\r\n  subtitle?: string;\r\n  backgroundColor?: string;\r\n  textColor?: string;\r\n}\r\n\r\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\r\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\r\n  color: ${props => props.textColor ? props.textColor : '#fff'};\r\n  display: flex;\r\n  align-items: center;\r\n  height: 90px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SubheaderTitle = styled.h1`\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  margin: 0;\r\n  line-height: 1em;\r\n`;\r\n\r\nconst SubheaderSubtitle = styled.small`\r\n  font-weight: normal;\r\n  display: block;\r\n  opacity: .9;\r\n`;\r\n\r\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\r\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\r\n    <Container>\r\n      <SubheaderTitle>\r\n        {title}\r\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\r\n      </SubheaderTitle>\r\n    </Container>\r\n  </StyledSubheader>\r\n);\r\n\r\nexport default Subheader;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport { Post } from \"../utils/models\";\r\nimport Subheader from \"../components/subheader\";\r\nimport SEO from \"../components/seo\";\r\nimport PostGrid from \"../components/post-grid\";\r\n\r\ninterface ArchivePageProps {\r\n  data: {\r\n    allPosts: {\r\n      edges: Array<{ node: Post }>;\r\n    };\r\n  };\r\n  location: Location;\r\n}\r\n\r\nconst ArchivePage: FunctionComponent<ArchivePageProps> = ({\r\n  data,\r\n  location,\r\n}) => {\r\n  const posts = data.allPosts.edges.map((node) => node.node) as Post[];\r\n\r\n  return (\r\n    <Layout bigHeader={false}>\r\n      <SEO location={location} title={`Archive`} type={`Series`} />\r\n      <Subheader title={`Archive`} subtitle={`${posts.length} posts`} />\r\n      <PostGrid posts={posts} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ArchivePage;\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPosts: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\.md$/\" } }\r\n      sort: { fields: frontmatter___created, order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            path\r\n            tags\r\n            excerpt\r\n            created\r\n            createdPretty: created(formatString: \"DD MMMM, YYYY\")\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 500, quality: 100) {\r\n                  base64\r\n                  aspectRatio\r\n                  src\r\n                  srcSet\r\n                  sizes\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["StyledCard","styled","Link","StyledArticle","Theme","FeaturedImage","Img","props","halfImage","CardContent","compact","CardMeta","CardTitle","Card","title","meta","path","featuredImage","content","style","children","to","fixed","fluid","tag","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","posts","map","post","index","frontmatter","childImageSharp","excerpt","key","created","createdPretty","tags","length","StyledSubheader","backgroundColor","textColor","SubheaderTitle","SubheaderSubtitle","subtitle","data","location","allPosts","edges","node","bigHeader","type"],"sourceRoot":""}