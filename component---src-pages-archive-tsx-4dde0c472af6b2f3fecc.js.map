{"version":3,"file":"component---src-pages-archive-tsx-4dde0c472af6b2f3fecc.js","mappings":"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","sources":["webpack://devgiangho/./src/components/card/style.tsx","webpack://devgiangho/./src/components/card/index.tsx","webpack://devgiangho/./src/components/post-grid/index.tsx","webpack://devgiangho/./src/components/subheader/index.tsx","webpack://devgiangho/./src/pages/archive.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, { CSSProperties, FunctionComponent, ReactNode } from \"react\";\nimport {\n  CardContent,\n  CardMeta,\n  CardTitle,\n  FeaturedImage,\n  StyledArticle,\n  StyledCard,\n} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  title,\n  meta,\n  path,\n  featuredImage,\n  content,\n  halfImage = false,\n  compact = false,\n  style,\n  children,\n}) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {featuredImage && featuredImage.fixed && (\n        <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage} />\n      )}\n      {featuredImage && featuredImage.fluid && (\n        <FeaturedImage fluid={featuredImage.fluid} halfImage={halfImage} />\n      )}\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta && (\n            <CardMeta>\n              {meta.tag && <>{meta.tag}</>}\n              {meta.time && <time dateTime={meta.time}>{meta.timePretty}</time>}\n            </CardMeta>\n          )}\n          {title && <CardTitle>{title}</CardTitle>}\n        </header>\n        {content && <p dangerouslySetInnerHTML={{ __html: content }} />}\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","import React, { FunctionComponent } from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport { Post } from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface ArchivePageProps {\n  data: {\n    allPosts: {\n      edges: Array<{ node: Post }>;\n    };\n  };\n  location: Location;\n}\n\nconst ArchivePage: FunctionComponent<ArchivePageProps> = ({\n  data,\n  location,\n}) => {\n  const posts = data.allPosts.edges.map((node) => node.node) as Post[];\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO location={location} title={`Archive`} type={`Series`} />\n      <Subheader title={`Archive`} subtitle={`${posts.length} posts`} />\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default ArchivePage;\n\nexport const query = graphql`\n  query {\n    allPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\.md$/\" } }\n      sort: { fields: frontmatter___created, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            tags\n            excerpt\n            created\n            createdPretty: created(formatString: \"DD MMMM, YYYY\")\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 500, quality: 100) {\n                  base64\n                  aspectRatio\n                  src\n                  srcSet\n                  sizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledCard","styled","Link","StyledArticle","Theme","FeaturedImage","Img","props","halfImage","CardContent","compact","CardMeta","CardTitle","Card","title","meta","path","featuredImage","content","style","children","to","fixed","fluid","tag","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","posts","map","post","index","frontmatter","childImageSharp","excerpt","key","created","createdPretty","tags","length","StyledSubheader","backgroundColor","textColor","SubheaderTitle","SubheaderSubtitle","subtitle","data","location","allPosts","edges","node","bigHeader","type"],"sourceRoot":""}