{"version":3,"file":"component---src-pages-archive-tsx-d17a542145ac54c73b71.js","mappings":"mMAMaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,MAAKC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAZJ,CAAY,uPAgBzBK,EAAgBL,EAAAA,QAAAA,QAAAA,WAAc,CAAAG,YAAA,uBAAAC,YAAA,eAAdJ,CAAc,wFAIpBM,EAAAA,EAAAA,YAAAA,IAKVC,GAAgBP,EAAAA,EAAAA,SAAOQ,EAAAA,GAAIN,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAXJ,CAAW,qGAMpC,SAAAS,GAAK,OAAIA,EAAMC,UAAS,mJAOHJ,EAAAA,EAAAA,YAAAA,GAAoB,sLAU1C,IAGUK,EAAcX,EAAAA,QAAAA,QAAAA,WAAc,CAAAG,YAAA,qBAAAC,YAAA,eAAdJ,CAAc,uDAC5B,SAAAS,GAAK,OAAIA,EAAMG,QAAU,OAAS,MAAM,IAWxCC,EAAWb,EAAAA,QAAAA,QAAAA,WAAc,CAAAG,YAAA,kBAAAC,YAAA,eAAdJ,CAAc,6GASzBc,EAAYd,EAAAA,QAAAA,GAAAA,WAAS,CAAAG,YAAA,mBAAAC,YAAA,eAATJ,CAAS,yBCpDrBe,EAAqC,SAAHC,GAUxC,IAC+BC,EAVpCC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAIJ,EAAJI,KACAC,EAAaL,EAAbK,cACAC,EAAON,EAAPM,QAAOC,EAAAP,EACPN,UAAAA,OAAS,IAAAa,GAAQA,EAAAC,EAAAR,EACjBJ,QAAAA,OAAO,IAAAY,GAAQA,EACfC,EAAKT,EAALS,MACAC,EAAQV,EAARU,SAEGJ,GAAWA,EAAQK,OAAS,MAC7BL,GAAiB,QAAPL,EAAAK,SAAO,IAAAL,OAAA,EAAPA,EAASW,UAAU,EAAG,MAAO,OAEzC,OAAQC,EAAAA,cAACxB,EAAa,CAACoB,MAAOA,GAC1BI,EAAAA,cAAC9B,EAAU,CAAC+B,GAAIV,GAEbC,GAAiBA,EAAcU,OAC9BF,EAAAA,cAACtB,EAAa,CAACwB,MAAOV,EAAcU,MAAOrB,UAAWA,IAEvDW,GAAiBA,EAAcW,OAC9BH,EAAAA,cAACtB,EAAa,CAACyB,MAAOX,EAAcW,MAAOtB,UAAWA,IAExDmB,EAAAA,cAAClB,EAAW,CAACC,QAASA,GACnBc,EACDG,EAAAA,cAAA,cACGV,GACCU,EAAAA,cAAChB,EAAQ,KACNM,EAAKc,KAAOJ,EAAAA,cAAAA,EAAAA,SAAA,KAAGV,EAAKc,KACpBd,EAAKe,MAAQL,EAAAA,cAAA,QAAMM,SAAUhB,EAAKe,MAAOf,EAAKiB,aAGlDlB,GAASW,EAAAA,cAACf,EAAS,KAAEI,IAEvBI,GAAWO,EAAAA,cAAA,KAAGQ,wBAAyB,CAAEC,OAAQhB,OAK5D,C,wDCnCA,IArBmD,SAAHN,GAAA,IAAKuB,EAAKvB,EAALuB,MAAK,OACxDV,EAAAA,cAACW,EAAAA,EAAI,KACFD,EAAME,KAAI,SAACC,EAAMC,GAAK,OACrBd,EAAAA,cAACd,EAAAA,EAAI,CACHG,MAAOwB,EAAKE,YAAY1B,MACxBE,KAAMsB,EAAKE,YAAYxB,KACvBC,cAAeqB,EAAKE,YAAYvB,cAAgBqB,EAAKE,YAAYvB,cAAcwB,gBAAkB,KACjGvB,QAASoB,EAAKE,YAAYE,QAC1BC,IAAKJ,EACLxB,KACE,CACEe,KAAMQ,EAAKE,YAAYI,QACvBZ,WAAYM,EAAKE,YAAYK,cAC7BhB,IAAKS,EAAKE,YAAYM,KAAKvB,OAAS,EAAIe,EAAKE,YAAYM,KAAK,GAAK,OAGvE,IAEC,C,yDChBHC,EAAkBnD,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,oGACZ,SAAAS,GAAK,OAAIA,EAAM2C,gBAAkB3C,EAAM2C,gBAAkB,MAAM,IAC1E,SAAA3C,GAAK,OAAIA,EAAM4C,UAAY5C,EAAM4C,UAAY,MAAM,IAOxDC,EAAiBtD,EAAAA,QAAAA,GAAAA,WAAS,CAAAG,YAAA,4BAAAC,YAAA,gBAATJ,CAAS,2EAQ1BuD,EAAoBvD,EAAAA,QAAAA,MAAAA,WAAY,CAAAG,YAAA,+BAAAC,YAAA,gBAAZJ,CAAY,kDAiBtC,IAXqD,SAAHgB,GAAA,IAAKE,EAAKF,EAALE,MAAOsC,EAAQxC,EAARwC,SAAUJ,EAAepC,EAAfoC,gBAAiBC,EAASrC,EAATqC,UAAS,OAChGxB,EAAAA,cAACsB,EAAe,CAACC,gBAAiBA,EAAiBC,UAAWA,GAC5DxB,EAAAA,cAAC4B,EAAAA,EAAS,KACR5B,EAAAA,cAACyB,EAAc,KACZpC,EACDW,EAAAA,cAAC0B,EAAiB,KAAEC,KAGR,C,mFCVpB,UAfyD,SAAHxC,GAGhD,IAFJ0C,EAAI1C,EAAJ0C,KACAC,EAAQ3C,EAAR2C,SAEMpB,EAAQmB,EAAKE,SAASC,MAAMpB,KAAI,SAACqB,GAAI,OAAKA,EAAKA,IAAI,IAEzD,OACEjC,EAAAA,cAACkC,EAAAA,EAAM,CAACC,WAAW,GACjBnC,EAAAA,cAACoC,EAAAA,EAAG,CAACN,SAAUA,EAAUzC,MAAK,UAAagD,KAAI,WAC/CrC,EAAAA,cAACsC,EAAAA,EAAS,CAACjD,MAAK,UAAasC,SAAajB,EAAMZ,OAAM,WACtDE,EAAAA,cAACuC,EAAAA,EAAQ,CAAC7B,MAAOA,IAGvB,C","sources":["webpack://devgiangho/./src/components/card/style.tsx","webpack://devgiangho/./src/components/card/index.tsx","webpack://devgiangho/./src/components/post-grid/index.tsx","webpack://devgiangho/./src/components/subheader/index.tsx","webpack://devgiangho/./src/pages/archive.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, { CSSProperties, FunctionComponent, ReactNode } from \"react\";\nimport {\n  CardContent,\n  CardMeta,\n  CardTitle,\n  FeaturedImage,\n  StyledArticle,\n  StyledCard,\n} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  title,\n  meta,\n  path,\n  featuredImage,\n  content,\n  halfImage = false,\n  compact = false,\n  style,\n  children,\n}) => {\n  if(content && content.length > 200) {\n    content = content?.substring(0, 200) + \"...\"\n  }\n  return (<StyledArticle style={style}>\n      <StyledCard to={path}>\n        {/* TODO: Oh boy... */}\n        {featuredImage && featuredImage.fixed && (\n          <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage} />\n        )}\n        {featuredImage && featuredImage.fluid && (\n          <FeaturedImage fluid={featuredImage.fluid} halfImage={halfImage} />\n        )}\n        <CardContent compact={compact}>\n          {children}\n          <header>\n            {meta && (\n              <CardMeta>\n                {meta.tag && <>{meta.tag}</>}\n                {meta.time && <time dateTime={meta.time}>{meta.timePretty}</time>}\n              </CardMeta>\n            )}\n            {title && <CardTitle>{title}</CardTitle>}\n          </header>\n          {content && <p dangerouslySetInnerHTML={{ __html: content }} />}\n        </CardContent>\n      </StyledCard>\n    </StyledArticle>)\n  \n};\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","import React, { FunctionComponent } from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport { Post } from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface ArchivePageProps {\n  data: {\n    allPosts: {\n      edges: Array<{ node: Post }>;\n    };\n  };\n  location: Location;\n}\n\nconst ArchivePage: FunctionComponent<ArchivePageProps> = ({\n  data,\n  location,\n}) => {\n  const posts = data.allPosts.edges.map((node) => node.node) as Post[];\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO location={location} title={`Archive`} type={`Series`} />\n      <Subheader title={`Archive`} subtitle={`${posts.length} posts`} />\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default ArchivePage;\n\nexport const query = graphql`\n  query {\n    allPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\.md$/\" } }\n      sort: { fields: frontmatter___created, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            tags\n            excerpt\n            created\n            createdPretty: created(formatString: \"DD MMMM, YYYY\")\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 500, quality: 100, webpQuality: 100) {\n                  base64\n                  aspectRatio\n                  srcWebp\n                  srcSetWebp\n                  src\n                  srcSet\n                  sizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledCard","styled","Link","withConfig","displayName","componentId","StyledArticle","Theme","FeaturedImage","Img","props","halfImage","CardContent","compact","CardMeta","CardTitle","Card","_ref","_content","title","meta","path","featuredImage","content","_ref$halfImage","_ref$compact","style","children","length","substring","React","to","fixed","fluid","tag","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","posts","Grid","map","post","index","frontmatter","childImageSharp","excerpt","key","created","createdPretty","tags","StyledSubheader","backgroundColor","textColor","SubheaderTitle","SubheaderSubtitle","subtitle","Container","data","location","allPosts","edges","node","Layout","bigHeader","SEO","type","Subheader","PostGrid"],"sourceRoot":""}